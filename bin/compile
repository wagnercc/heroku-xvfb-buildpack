#!/bin/sh

set -e

BUILD_DIR=$1
CACHE_DIR=$2

# config
# http://orm-buildpack.s3.amazonaws.com/Xvfb.tar.gz

# Buildpack URL
FILE_NAME=xvfb.tar.bz2
BUILDPACK_XVFB_PACKAGE=https://s3.amazonaws.com/heroku.buildpacks/${FILE_NAME}

mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "-----> Fetching XVFB binaries at ${BUILDPACK_XVFB_PACKAGE}"
  curl $BUILDPACK_XVFB_PACKAGE -s -o $CACHE_DIR/$FILE_NAME
fi

echo "-----> Extracting XVFB binaries to ${BUILD_DIR}/vendor/xvfb"
mkdir -p $BUILD_DIR/vendor/xvfb
mkdir -p $CACHE_DIR/vendor-xvfb
tar jxf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR/vendor-xvfb
cp -r $CACHE_DIR/vendor-xvfb/Xvfb/* $BUILD_DIR/

# symlink libs to where Xvfb searches
ln -s /lib/x86_64-linux-gnu/libudev.so.1 $BUILD_DIR/.apt/usr/lib/libudev.so.0
ln -s /app/.apt/usr/lib/x86_64-linux-gnu/libXfont.so.1 $BUILD_DIR/.apt/usr/lib/libXfont.so.1

# patch Xvfb to use /app/.. paths instead of hardcoded wrong values
sed -i.bak s/usr\\/bin/app\\/ubi/g $BUILD_DIR/.apt/usr/bin/Xvfb
sed -i.bak s/usr\\/share\\/fonts/app\\/usr-s-fonts/g $BUILD_DIR/.apt/usr/bin/Xvfb
# create symlinks for Xvfb to use /app/.apt/usr/...
ln -s /app/.apt/usr/bin $BUILD_DIR/ubi
ln -s /app/.apt/usr/share/fonts $BUILD_DIR/usr-s-fonts

# run mkfontdir with binaries from inside dyno
export PATH="$PATH:$BUILD_DIR/.apt/usr/bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$BUILD_DIR/.apt/usr/lib:$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu"
find $BUILD_DIR/.apt/usr/share/fonts/X11 -type d | xargs $BUILD_DIR/.apt/usr/bin/mkfontdir